[{"C:\\Projects\\ecole\\client\\src\\index.js":"1","C:\\Projects\\ecole\\client\\src\\App.js":"2","C:\\Projects\\ecole\\client\\src\\redux\\store\\store.js":"3","C:\\Projects\\ecole\\client\\src\\redux\\reducers\\reducers.js":"4","C:\\Projects\\ecole\\client\\src\\pages\\Home.js":"5","C:\\Projects\\ecole\\client\\src\\pages\\auth\\Login.js":"6","C:\\Projects\\ecole\\client\\src\\pages\\auth\\Register.js":"7","C:\\Projects\\ecole\\client\\src\\pages\\auth\\Forgot.js":"8","C:\\Projects\\ecole\\client\\src\\components\\auth\\PrivateRoute.js":"9","C:\\Projects\\ecole\\client\\src\\redux\\reducers\\eleveReducer.js":"10","C:\\Projects\\ecole\\client\\src\\components\\auth\\ProductLogo.js":"11","C:\\Projects\\ecole\\client\\src\\components\\auth\\CyberSecurityBadge.js":"12","C:\\Projects\\ecole\\client\\src\\redux\\actions\\actions.js":"13","C:\\Projects\\ecole\\client\\src\\components\\auth\\SidePanel.js":"14","C:\\Projects\\ecole\\client\\src\\redux\\actions\\eleveActions.js":"15","C:\\Projects\\ecole\\client\\src\\config\\apiConfig.js":"16","C:\\Projects\\ecole\\client\\src\\pages\\eleve\\Eleve.js":"17","C:\\Projects\\ecole\\client\\src\\components\\general\\Header.js":"18","C:\\Projects\\ecole\\client\\src\\components\\eleve\\EleveTable.js":"19","C:\\Projects\\ecole\\client\\src\\components\\eleve\\EleveAddSteps.js":"20","C:\\Projects\\ecole\\client\\src\\redux\\reducers\\tuteurReducer.js":"21","C:\\Projects\\ecole\\client\\src\\redux\\actions\\tuteurActions.js":"22","C:\\Projects\\ecole\\client\\src\\pages\\education\\Years.js":"23","C:\\Projects\\ecole\\client\\src\\components\\app\\PageHeader.js":"24","C:\\Projects\\ecole\\client\\src\\redux\\actions\\schoolActions.js":"25","C:\\Projects\\ecole\\client\\src\\components\\education\\years\\YearTable.js":"26","C:\\Projects\\ecole\\client\\src\\redux\\reducers\\schoolReducer.js":"27","C:\\Projects\\ecole\\client\\src\\components\\app\\DataTable.js":"28","C:\\Projects\\ecole\\client\\src\\components\\eleve\\EleveAdd.js":"29","C:\\Projects\\ecole\\client\\src\\components\\app\\DeleteDialog.js":"30"},{"size":496,"mtime":1610662863176,"results":"31","hashOfConfig":"32"},{"size":7540,"mtime":1612020066961,"results":"33","hashOfConfig":"32"},{"size":775,"mtime":1612021195398,"results":"34","hashOfConfig":"32"},{"size":910,"mtime":1610723334941,"results":"35","hashOfConfig":"32"},{"size":193,"mtime":1612192869781,"results":"36","hashOfConfig":"32"},{"size":6372,"mtime":1610666779594,"results":"37","hashOfConfig":"32"},{"size":12971,"mtime":1610667453777,"results":"38","hashOfConfig":"32"},{"size":7531,"mtime":1610667281582,"results":"39","hashOfConfig":"32"},{"size":452,"mtime":1609717928420,"results":"40","hashOfConfig":"32"},{"size":1319,"mtime":1610666245052,"results":"41","hashOfConfig":"32"},{"size":682,"mtime":1609717928383,"results":"42","hashOfConfig":"32"},{"size":2070,"mtime":1609717928286,"results":"43","hashOfConfig":"32"},{"size":2742,"mtime":1612214350254,"results":"44","hashOfConfig":"32"},{"size":2046,"mtime":1609717928518,"results":"45","hashOfConfig":"32"},{"size":2321,"mtime":1612203392067,"results":"46","hashOfConfig":"32"},{"size":210,"mtime":1612021345494,"results":"47","hashOfConfig":"32"},{"size":676,"mtime":1612197202720,"results":"48","hashOfConfig":"32"},{"size":330,"mtime":1610668855952,"results":"49","hashOfConfig":"32"},{"size":5986,"mtime":1610755289405,"results":"50","hashOfConfig":"32"},{"size":14612,"mtime":1610769994645,"results":"51","hashOfConfig":"32"},{"size":1174,"mtime":1610756346417,"results":"52","hashOfConfig":"32"},{"size":1014,"mtime":1610756577753,"results":"53","hashOfConfig":"32"},{"size":737,"mtime":1612021032418,"results":"54","hashOfConfig":"32"},{"size":404,"mtime":1612019698464,"results":"55","hashOfConfig":"32"},{"size":1812,"mtime":1612215518639,"results":"56","hashOfConfig":"32"},{"size":1117,"mtime":1612488368723,"results":"57","hashOfConfig":"32"},{"size":855,"mtime":1612215021049,"results":"58","hashOfConfig":"32"},{"size":1684,"mtime":1612221519009,"results":"59","hashOfConfig":"32"},{"size":1556,"mtime":1612197202795,"results":"60","hashOfConfig":"32"},{"size":1675,"mtime":1612221518657,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1jbt0sd",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"C:\\Projects\\ecole\\client\\src\\index.js",[],["128","129"],"C:\\Projects\\ecole\\client\\src\\App.js",["130"],"import React from \"react\";\r\nimport {BrowserRouter as Router, Link, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n// Pages\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/auth/Login\";\r\nimport Register from \"./pages/auth/Register\";\r\nimport ForgotPassword from \"./pages/auth/Forgot\";\r\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport clsx from \"clsx\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport Eleve from \"./pages/eleve/Eleve\";\r\nimport Years from \"./pages/education/Years\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport default function App() {\r\n    const token = useSelector(state => state.authentication.token)\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const hasAuth = () => {\r\n        return token && token.length > 0;\r\n    }\r\n    const handleDrawerOpen = () => {\r\n        setOpen(hasAuth());\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (<Router>\r\n            <div className={classes.root}>\r\n                <CssBaseline/>\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Gestion Groupe Scolaire\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider/>\r\n                    <List>\r\n                        <ListItem button component={Link} to=\"/\">\r\n                            <ListItemIcon> <BubbleChartIcon/></ListItemIcon>\r\n                            <ListItemText primary={'Accueil'}/>\r\n                        </ListItem>\r\n                        <Divider/>\r\n                        <ListItem button component={Link} to=\"/eleve\" selected>\r\n                            <ListItemIcon> <BubbleChartIcon/></ListItemIcon>\r\n                            <ListItemText primary={'Eleve'}/>\r\n                        </ListItem>\r\n                        <ListItem button component={Link} to=\"/annee\" selected>\r\n                            <ListItemIcon> <BubbleChartIcon/></ListItemIcon>\r\n                            <ListItemText primary={'Année scolaire'}/>\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider/>\r\n                </Drawer>\r\n                <main\r\n                    className={clsx(classes.content, {\r\n                        [classes.contentShift]: open,\r\n                    })}\r\n                >\r\n                    <div className={classes.drawerHeader}/>\r\n\r\n                    <Switch className=\"full\">\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/\"\r\n                            component={Home}\r\n                            canActivate={() => hasAuth()}\r\n                        />\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/annee\"\r\n                            component={Years}\r\n                            canActivate={() => hasAuth()}\r\n                        />\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/eleve\"\r\n                            component={Home}\r\n                            canActivate={() => hasAuth()}\r\n                        />\r\n                        <Route exact path=\"/login\" component={Login}/>\r\n                        <Route exact path=\"/register\" component={Register}/>\r\n                        <Route exact path=\"/forgot-password\" component={ForgotPassword}/>\r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    );\r\n\r\n}\r\n\r\n","C:\\Projects\\ecole\\client\\src\\redux\\store\\store.js",[],"C:\\Projects\\ecole\\client\\src\\redux\\reducers\\reducers.js",[],"C:\\Projects\\ecole\\client\\src\\pages\\Home.js",[],"C:\\Projects\\ecole\\client\\src\\pages\\auth\\Login.js",[],"C:\\Projects\\ecole\\client\\src\\pages\\auth\\Register.js",[],"C:\\Projects\\ecole\\client\\src\\pages\\auth\\Forgot.js",[],"C:\\Projects\\ecole\\client\\src\\components\\auth\\PrivateRoute.js",[],"C:\\Projects\\ecole\\client\\src\\redux\\reducers\\eleveReducer.js",[],"C:\\Projects\\ecole\\client\\src\\components\\auth\\ProductLogo.js",[],"C:\\Projects\\ecole\\client\\src\\components\\auth\\CyberSecurityBadge.js",["131","132"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  wrapper: {\r\n    textAlign: \"center\"\r\n  },\r\n  placeholderAppLogo: {\r\n    height: \"80px\",\r\n    width: \"auto\"\r\n  },\r\n  link: {\r\n    color: theme.palette.primary[\"300\"],\r\n    \"&:visited\": {\r\n      color: theme.palette.primary[\"300\"]\r\n    }\r\n  },\r\n  whiteLink: {\r\n    color: \"white\",\r\n    \"&:visited\": {\r\n      color: \"white\"\r\n    }\r\n  },\r\n  placeholderCyberSecurityLogo: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n    height: \"60px\",\r\n    width: \"60px\"\r\n  }\r\n});\r\n\r\nclass CyberSecurityBadge extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    const linkColor =\r\n      this.props.linkColor === \"white\" ? classes.whiteLink : classes.link;\r\n    return (\r\n      <div className={classes.wrapper} style={this.props.style}>\r\n        {/* PLACEHOLDER IMAGE: please use the correct cybersecurity certification logo here */}\r\n        <img\r\n          className={classes.placeholderCyberSecurityLogo}\r\n          src=\"https://www.gvsu.edu/cms4/asset/8C31E4D7-AD5F-8F01-B5DF51CD89E0BA46/module/75BCD32D-AB8B-315D-1D25AB4203DE98CC/7DFC40B5-B448-F75F-ECCA1B1877D5E6A7[1537809817].png\"\r\n          alt=\"Cybersecurity Badge\"\r\n          border=\"0\"\r\n        />\r\n        <Typography variant=\"body2\" color={\"inherit\"}>\r\n          {this.props.legalText}\r\n          <br />\r\n          <a className={linkColor} href=\"#\">\r\n            Terms and Conditions\r\n          </a>{\" \"}\r\n          and{\" \"}\r\n          <a className={linkColor} href=\"\">\r\n            Privacy Policy\r\n          </a>\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCyberSecurityBadge.propTypes = {\r\n  legalText: PropTypes.string,\r\n  style: PropTypes.object,\r\n  linkColor: PropTypes.oneOf([\"theme\", \"white\"])\r\n};\r\nCyberSecurityBadge.defaultProps = {\r\n  legalText: \"By logging in, you agree to our \",\r\n  linkColor: \"theme\"\r\n};\r\n\r\nexport default withStyles(styles)(CyberSecurityBadge);\r\n","C:\\Projects\\ecole\\client\\src\\redux\\actions\\actions.js",[],"C:\\Projects\\ecole\\client\\src\\components\\auth\\SidePanel.js",[],"C:\\Projects\\ecole\\client\\src\\redux\\actions\\eleveActions.js",[],"C:\\Projects\\ecole\\client\\src\\config\\apiConfig.js",[],"C:\\Projects\\ecole\\client\\src\\pages\\eleve\\Eleve.js",[],"C:\\Projects\\ecole\\client\\src\\components\\general\\Header.js",[],"C:\\Projects\\ecole\\client\\src\\components\\eleve\\EleveTable.js",["133","134"],"import React, {useEffect, useState} from \"react\"\r\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Paper, Slide} from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteEleves, fetchEleves} from \"../../redux/actions/eleveActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst ROWS_PER_PAGE_OPTIONS = [10, 20, 100];\r\n\r\nfunction createData(eleve) {\r\n    return [\r\n        eleve.id,\r\n        eleve.nom,\r\n        eleve.prenom,\r\n        eleve.sexe ? \"M.\" : \"F.\",\r\n        new Intl.DateTimeFormat(\"fr-Fr\").format(new Date(eleve.naissDate)),\r\n        eleve.tuteur.id,\r\n        eleve.tuteur.identifiant,\r\n        (eleve.tuteur.sexe ? \"M. \" : \"Mme. \") + eleve.tuteur.nom + \" \" + eleve.tuteur.prenom,\r\n        eleve.tuteur.tel1,\r\n        eleve.tuteur.address\r\n    ]\r\n}\r\n\r\nexport default function EleveTable() {\r\n    const columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"ID\"\r\n        },\r\n        {\r\n            name: \"nom\",\r\n            label: \"NOM\"\r\n        },\r\n        {\r\n            name: \"prenom\",\r\n            label: \"PRÉNOM\"\r\n        },\r\n        {\r\n            name: \"sexe\",\r\n            label: \"SEXE\"\r\n        },\r\n        {\r\n            name: \"naissDate\",\r\n            label: \"DATE DE NAISSANCE\"\r\n        },\r\n        {\r\n            name: \"tuteur_id\",\r\n            label: \"ID TUTEUR\"\r\n        },\r\n        {\r\n            name: \"tuteur_identifiant\",\r\n            label: \"IDENTIFIANT\"\r\n        },\r\n        {\r\n            name: \"tuteur_nom\",\r\n            label: \"NOM TUTEUR\"\r\n        },\r\n        {\r\n            name: \"tuteur_tel1\",\r\n            label: \"TEL\"\r\n        },\r\n        {\r\n            name: \"tuteur_address\",\r\n            label: \"ADRESSE\"\r\n        }\r\n    ];\r\n    const {content, totalElements, pageNumber} = useSelector(state => state.eleves.page);\r\n    const [data, setData] = useState([]);\r\n    const [deleteI, setDeleteI] = useState([]);\r\n    const [pagination, setPagination] = useState({\r\n        page: 0,\r\n        size: 10,\r\n        fields: \"id\",\r\n        direction: \"asc\"\r\n    });\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        content && setData(content.map(o => createData(o)));\r\n    }, [content]);\r\n    useEffect(() => {\r\n        dispatch(fetchEleves(pagination));\r\n    }, [pagination]);\r\n    const deleteHandle = (deleted) => {\r\n        if (deleted) {\r\n            dispatch(deleteEleves(pagination, {ids: deleteI.map(i => content[i].id)}));\r\n            setDeleteI([]);\r\n        } else {\r\n            setDeleteI([]);\r\n        }\r\n    }\r\n    const options = {\r\n        filters: false,\r\n        rowsPerPage: pagination.size,\r\n        rowsPerPageOptions: ROWS_PER_PAGE_OPTIONS,\r\n        serverSide: true,\r\n        sortOrder: {\r\n            name: pagination.fields,\r\n            direction: pagination.direction\r\n        },\r\n        count: totalElements,\r\n        page: pageNumber,\r\n        onTableChange: (action, tableState) => {\r\n            if (action === \"sort\")\r\n                setPagination({\r\n                    ...pagination,\r\n                    direction: tableState.sortOrder.direction,\r\n                    fields: tableState.sortOrder.name\r\n                });\r\n            if (action === \"changePage\") {\r\n                setPagination({...pagination, page: tableState.page});\r\n            }\r\n        },\r\n        onChangeRowsPerPage: rowsPerPage => {\r\n            setPagination({...pagination, size: rowsPerPage});\r\n        },\r\n        onRowsDelete: (data) => {\r\n            setDeleteI(data.data.map(o => o.dataIndex));\r\n        }\r\n    };\r\n    return (\r\n        <Paper>\r\n            <EleveDelete handleDone={deleteHandle} indexList={deleteI} open={deleteI.length > 0}/>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <MUIDataTable\r\n                        title={\"Employee List\"}\r\n                        data={data}\r\n                        columns={columns}\r\n                        options={options}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport function EleveDelete({indexList, open, handleDone}) {\r\n    const {content} = useSelector(state => state.eleves.page);\r\n    const [list, setList] = useState([]);\r\n    useEffect(() => {\r\n        setList(indexList.map(i => {\r\n            const eleve = content[i];\r\n            return eleve.id + \" \" + eleve.nom + \" \" + eleve.prenom\r\n        }).join(\", \") + \".\");\r\n    }, [indexList]);\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={() => handleDone(false)}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Êtes-vous sûr de vouloir supprimer ?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Êtes-vous sûr de supprimer ces enregistrements ?\r\n                        En supprimant définitivement, vous ne pourrez pas les récupérer.<br/>\r\n                        {list}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => handleDone(false)} color=\"primary\">\r\n                        Annuler\r\n                    </Button>\r\n                    <Button onClick={() => handleDone(true)} color=\"primary\">\r\n                        Oui, supprimer!\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Projects\\ecole\\client\\src\\components\\eleve\\EleveAddSteps.js",["135","136"],"import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport {FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, TextField} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchTuteurs} from \"../../redux/actions/tuteurActions\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {saveEleve} from \"../../redux/actions/eleveActions\";\r\n\r\nconst QontoConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 10,\r\n        left: 'calc(-50% + 16px)',\r\n        right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            borderColor: '#784af4',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            borderColor: '#784af4',\r\n        },\r\n    },\r\n    line: {\r\n        borderColor: '#eaeaf0',\r\n        borderTopWidth: 3,\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n        color: '#eaeaf0',\r\n        display: 'flex',\r\n        height: 22,\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        color: '#784af4',\r\n    },\r\n    circle: {\r\n        width: 8,\r\n        height: 8,\r\n        borderRadius: '50%',\r\n        backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n        color: '#784af4',\r\n        zIndex: 1,\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const {active, completed} = props;\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n            })}\r\n        >\r\n            {completed ? <Check className={classes.completed}/> : <div className={classes.circle}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: '#eaeaf0',\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const {active, completed} = props;\r\n\r\n    const icons = {\r\n        1: <SettingsIcon/>,\r\n        2: <GroupAddIcon/>,\r\n        3: <VideoLabelIcon/>,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n    /**\r\n     * The label displayed in the step icon.\r\n     */\r\n    icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['tuteur', 'élève', 'Sauvgarder'];\r\n}\r\n\r\nexport default function EleveAddSteps({setOpen}) {\r\n    const [state, setState] = useState({});\r\n    const tuteurs = useSelector(state => state.tuteurs.page.content);\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const steps = getSteps();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchTuteurs({}));\r\n    }, []);\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n        setState({});\r\n    };\r\n\r\n    function handleSave() {\r\n        dispatch(saveEleve(state))\r\n        handleNext();\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} hidden={activeStep !== 0}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            options={tuteurs}\r\n                            getOptionLabel={(option) => option.identifiant}\r\n                            fullWidth\r\n                            onChange={(event, newValue) => {\r\n                                setState({...state, tuteur: newValue});\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} label=\"identifiant du tuteur\"\r\n                                                                variant=\"outlined\"/>}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            id=\"outlined-read-only-input\"\r\n                            fullWidth\r\n                            label=\"Nom et prénom\"\r\n                            value={state && state.tuteur ? ((state.tuteur.sexe ? \"M. \" : \"Mme. \") + state.tuteur.nom + \" \" + state.tuteur.prenom) : \" \"}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} hidden={activeStep !== 1}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth>\r\n                                <KeyboardDatePicker\r\n                                    label=\"Date de naissance\"\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    value={state.naissDate}\r\n                                    onChange={(date) => {\r\n                                        setState({\r\n                                            ...state,\r\n                                            naissDate: date\r\n                                        });\r\n                                    }}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                    inputVariant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl component=\"fieldset\" fullWidth variant={\"outlined\"}>\r\n                                <FormLabel component=\"legend\">Sexe</FormLabel>\r\n                                <RadioGroup\r\n                                    row\r\n                                    aria-label=\"sexe\"\r\n                                    name=\"sexe\"\r\n                                    value={state && state.sexe ? \"true\" : \"false\"}\r\n                                    onChange={(value) => {\r\n                                        setState({\r\n                                                ...state,\r\n                                                sexe: value.target.value\r\n                                            }\r\n                                        )\r\n                                    }}>\r\n                                    <FormControlLabel value={\"false\"} control={<Radio/>} label=\"Female\"/>\r\n                                    <FormControlLabel value={\"true\"} control={<Radio/>} label=\"Male\"/>\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                id=\"nom\"\r\n                                name=\"nom\"\r\n                                fullWidth\r\n                                label=\"Nom\"\r\n                                value={state.nom}\r\n                                onChange={(e) => {\r\n                                    setState({...state, nom: e.target.value});\r\n                                }}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                id=\"prenom\"\r\n                                name=\"prenom\"\r\n                                fullWidth\r\n                                label=\"Prénom\"\r\n                                value={state.prenom}\r\n                                onChange={(e) => {\r\n                                    setState({...state, prenom: e.target.value});\r\n                                }}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} hidden={activeStep !== 2}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <h4>Voulez-vous inscrire cet étudiant :</h4>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector/>}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={3} justify={\"flex-end\"}>\r\n\r\n                    <Grid item>\r\n                        <Button\r\n                            onClick={() => {\r\n                                handleReset()\r\n                                setOpen(false);\r\n                            }}\r\n                            className={classes.button}\r\n                            variant={\"outlined\"}>\r\n                            Annuler\r\n                        </Button>\r\n                    </Grid>\r\n                    {activeStep === steps.length ? (\r\n                        <Grid item>\r\n                            <Button onClick={handleReset} className={classes.button} variant={\"contained\"}>\r\n                                Nouveau\r\n                            </Button>\r\n                        </Grid>\r\n                    ) : (\r\n                        <Grid item>\r\n                            <Button disabled={activeStep === 0}\r\n                                    onClick={handleBack}\r\n                                    className={classes.button}\r\n                                    variant={\"outlined\"}>\r\n                                Retour\r\n                            </Button>\r\n                        </Grid>\r\n                    )}\r\n                    {activeStep === steps.length - 1 ? (\r\n                        <Grid item>\r\n                            <Button\r\n                                disabled={!(state.tuteur && state.tuteur.id)}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleSave}\r\n                                className={classes.button}\r\n                            >\r\n                                Sauvgarder\r\n                            </Button>\r\n                        </Grid>) : activeStep < steps.length - 1 ? (\r\n                        <Grid item>\r\n                            <Button\r\n                                disabled={!(state.tuteur && state.tuteur.id)}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleNext}\r\n                                className={classes.button}\r\n                            >\r\n                                Suivant\r\n                            </Button>\r\n                        </Grid>) : null}\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","C:\\Projects\\ecole\\client\\src\\redux\\reducers\\tuteurReducer.js",[],"C:\\Projects\\ecole\\client\\src\\redux\\actions\\tuteurActions.js",[],"C:\\Projects\\ecole\\client\\src\\pages\\education\\Years.js",[],"C:\\Projects\\ecole\\client\\src\\components\\app\\PageHeader.js",[],"C:\\Projects\\ecole\\client\\src\\redux\\actions\\schoolActions.js",[],"C:\\Projects\\ecole\\client\\src\\components\\education\\years\\YearTable.js",[],"C:\\Projects\\ecole\\client\\src\\redux\\reducers\\schoolReducer.js",[],"C:\\Projects\\ecole\\client\\src\\components\\app\\DataTable.js",[],"C:\\Projects\\ecole\\client\\src\\components\\eleve\\EleveAdd.js",[],"C:\\Projects\\ecole\\client\\src\\components\\app\\DeleteDialog.js",[],["137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":28,"column":8,"nodeType":"145","messageId":"146","endLine":28,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":51,"column":11,"nodeType":"149","endLine":51,"endColumn":45},{"ruleId":"147","severity":1,"message":"148","line":55,"column":11,"nodeType":"149","endLine":55,"endColumn":44},{"ruleId":"150","severity":1,"message":"151","line":82,"column":8,"nodeType":"152","endLine":82,"endColumn":20,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":145,"column":8,"nodeType":"152","endLine":145,"endColumn":19,"suggestions":"155"},{"ruleId":"143","severity":1,"message":"156","line":95,"column":7,"nodeType":"145","messageId":"146","endLine":95,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":203,"column":8,"nodeType":"152","endLine":203,"endColumn":10,"suggestions":"157"},{"ruleId":"139","replacedBy":"158"},{"ruleId":"141","replacedBy":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'Eleve' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["162"],"React Hook useEffect has a missing dependency: 'content'. Either include it or remove the dependency array.",["163"],"'ColorlibConnector' is assigned a value but never used.",["164"],["160"],["161"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [dispatch, pagination]",{"range":"171","text":"172"},"Update the dependencies array to be: [content, indexList]",{"range":"173","text":"174"},"Update the dependencies array to be: [dispatch]",{"range":"175","text":"176"},[2397,2409],"[dispatch, pagination]",[4567,4578],"[content, indexList]",[5572,5574],"[dispatch]"]