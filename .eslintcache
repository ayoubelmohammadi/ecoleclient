[{"/Users/iub/IdeaProjects/ecoleclient/src/index.js":"1","/Users/iub/IdeaProjects/ecoleclient/src/App.js":"2","/Users/iub/IdeaProjects/ecoleclient/src/redux/store/store.js":"3","/Users/iub/IdeaProjects/ecoleclient/src/redux/reducers/reducers.js":"4","/Users/iub/IdeaProjects/ecoleclient/src/pages/Home.js":"5","/Users/iub/IdeaProjects/ecoleclient/src/pages/auth/Login.js":"6","/Users/iub/IdeaProjects/ecoleclient/src/pages/eleve/Eleve.js":"7","/Users/iub/IdeaProjects/ecoleclient/src/pages/auth/Register.js":"8","/Users/iub/IdeaProjects/ecoleclient/src/pages/education/Years.js":"9","/Users/iub/IdeaProjects/ecoleclient/src/pages/auth/Forgot.js":"10","/Users/iub/IdeaProjects/ecoleclient/src/components/auth/PrivateRoute.js":"11","/Users/iub/IdeaProjects/ecoleclient/src/redux/reducers/eleveReducer.js":"12","/Users/iub/IdeaProjects/ecoleclient/src/redux/reducers/tuteurReducer.js":"13","/Users/iub/IdeaProjects/ecoleclient/src/redux/reducers/schoolReducer.js":"14","/Users/iub/IdeaProjects/ecoleclient/src/components/auth/ProductLogo.js":"15","/Users/iub/IdeaProjects/ecoleclient/src/components/auth/CyberSecurityBadge.js":"16","/Users/iub/IdeaProjects/ecoleclient/src/redux/actions/actions.js":"17","/Users/iub/IdeaProjects/ecoleclient/src/components/auth/SidePanel.js":"18","/Users/iub/IdeaProjects/ecoleclient/src/redux/actions/eleveActions.js":"19","/Users/iub/IdeaProjects/ecoleclient/src/redux/actions/schoolActions.js":"20","/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/EleveTable.js":"21","/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/EleveAdd.js":"22","/Users/iub/IdeaProjects/ecoleclient/src/components/general/Header.js":"23","/Users/iub/IdeaProjects/ecoleclient/src/components/app/PageHeader.js":"24","/Users/iub/IdeaProjects/ecoleclient/src/redux/actions/tuteurActions.js":"25","/Users/iub/IdeaProjects/ecoleclient/src/components/education/years/YearTable.js":"26","/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/EleveAddSteps.js":"27","/Users/iub/IdeaProjects/ecoleclient/src/components/app/DataTable.js":"28","/Users/iub/IdeaProjects/ecoleclient/src/config/apiConfig.js":"29","/Users/iub/IdeaProjects/ecoleclient/src/components/app/DeleteDialog.js":"30","/Users/iub/IdeaProjects/ecoleclient/src/pages/eleve/Tutor.js":"31","/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/TutorUpdate.js":"32","/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/TutorSelectOptions.js":"33","/Users/iub/IdeaProjects/ecoleclient/src/pages/fincance/Inscription.js":"34","/Users/iub/IdeaProjects/ecoleclient/src/components/education/years/YearDialog.js":"35"},{"size":496,"mtime":1613045109859,"results":"36","hashOfConfig":"37"},{"size":8460,"mtime":1613165829367,"results":"38","hashOfConfig":"37"},{"size":752,"mtime":1613045109863,"results":"39","hashOfConfig":"37"},{"size":883,"mtime":1613045109863,"results":"40","hashOfConfig":"37"},{"size":220,"mtime":1613131755421,"results":"41","hashOfConfig":"37"},{"size":6151,"mtime":1613076001909,"results":"42","hashOfConfig":"37"},{"size":654,"mtime":1613127147135,"results":"43","hashOfConfig":"37"},{"size":12576,"mtime":1613045109860,"results":"44","hashOfConfig":"37"},{"size":715,"mtime":1613045109861,"results":"45","hashOfConfig":"37"},{"size":7290,"mtime":1613045109860,"results":"46","hashOfConfig":"37"},{"size":433,"mtime":1613045109856,"results":"47","hashOfConfig":"37"},{"size":1268,"mtime":1613045109863,"results":"48","hashOfConfig":"37"},{"size":1128,"mtime":1613045109863,"results":"49","hashOfConfig":"37"},{"size":823,"mtime":1613045109863,"results":"50","hashOfConfig":"37"},{"size":655,"mtime":1613045109856,"results":"51","hashOfConfig":"37"},{"size":1996,"mtime":1613045109856,"results":"52","hashOfConfig":"37"},{"size":2663,"mtime":1613045109861,"results":"53","hashOfConfig":"37"},{"size":1975,"mtime":1613045109856,"results":"54","hashOfConfig":"37"},{"size":2266,"mtime":1613085208146,"results":"55","hashOfConfig":"37"},{"size":1751,"mtime":1613045109862,"results":"56","hashOfConfig":"37"},{"size":5211,"mtime":1613136369558,"results":"57","hashOfConfig":"37"},{"size":1509,"mtime":1613045109857,"results":"58","hashOfConfig":"37"},{"size":553,"mtime":1613076001890,"results":"59","hashOfConfig":"37"},{"size":389,"mtime":1613045109855,"results":"60","hashOfConfig":"37"},{"size":1935,"mtime":1613085248833,"results":"61","hashOfConfig":"37"},{"size":1078,"mtime":1613045109857,"results":"62","hashOfConfig":"37"},{"size":14444,"mtime":1613142368577,"results":"63","hashOfConfig":"37"},{"size":1635,"mtime":1613045109855,"results":"64","hashOfConfig":"37"},{"size":8680,"mtime":1613055591662,"results":"65","hashOfConfig":"37"},{"size":1637,"mtime":1613045109855,"results":"66","hashOfConfig":"37"},{"size":340,"mtime":1613131755436,"results":"67","hashOfConfig":"37"},{"size":17628,"mtime":1613128067158,"results":"68","hashOfConfig":"37"},{"size":1498,"mtime":1613133847362,"results":"69","hashOfConfig":"37"},{"size":4966,"mtime":1613168425130,"results":"70","hashOfConfig":"37"},{"size":3194,"mtime":1613168479733,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"9cxfiv",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/iub/IdeaProjects/ecoleclient/src/index.js",[],["148","149"],"/Users/iub/IdeaProjects/ecoleclient/src/App.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/redux/store/store.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/redux/reducers/reducers.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/pages/Home.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/pages/auth/Login.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/pages/eleve/Eleve.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/pages/auth/Register.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/pages/education/Years.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/pages/auth/Forgot.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/auth/PrivateRoute.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/redux/reducers/eleveReducer.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/redux/reducers/tuteurReducer.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/redux/reducers/schoolReducer.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/auth/ProductLogo.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/auth/CyberSecurityBadge.js",["150","151"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  wrapper: {\n    textAlign: \"center\"\n  },\n  placeholderAppLogo: {\n    height: \"80px\",\n    width: \"auto\"\n  },\n  link: {\n    color: theme.palette.primary[\"300\"],\n    \"&:visited\": {\n      color: theme.palette.primary[\"300\"]\n    }\n  },\n  whiteLink: {\n    color: \"white\",\n    \"&:visited\": {\n      color: \"white\"\n    }\n  },\n  placeholderCyberSecurityLogo: {\n    marginBottom: theme.spacing.unit * 2,\n    height: \"60px\",\n    width: \"60px\"\n  }\n});\n\nclass CyberSecurityBadge extends React.Component {\n  render() {\n    const { classes } = this.props;\n    const linkColor =\n      this.props.linkColor === \"white\" ? classes.whiteLink : classes.link;\n    return (\n      <div className={classes.wrapper} style={this.props.style}>\n        {/* PLACEHOLDER IMAGE: please use the correct cybersecurity certification logo here */}\n        <img\n          className={classes.placeholderCyberSecurityLogo}\n          src=\"https://www.gvsu.edu/cms4/asset/8C31E4D7-AD5F-8F01-B5DF51CD89E0BA46/module/75BCD32D-AB8B-315D-1D25AB4203DE98CC/7DFC40B5-B448-F75F-ECCA1B1877D5E6A7[1537809817].png\"\n          alt=\"Cybersecurity Badge\"\n          border=\"0\"\n        />\n        <Typography variant=\"body2\" color={\"inherit\"}>\n          {this.props.legalText}\n          <br />\n          <a className={linkColor} href=\"#\">\n            Terms and Conditions\n          </a>{\" \"}\n          and{\" \"}\n          <a className={linkColor} href=\"\">\n            Privacy Policy\n          </a>\n        </Typography>\n      </div>\n    );\n  }\n}\n\nCyberSecurityBadge.propTypes = {\n  legalText: PropTypes.string,\n  style: PropTypes.object,\n  linkColor: PropTypes.oneOf([\"theme\", \"white\"])\n};\nCyberSecurityBadge.defaultProps = {\n  legalText: \"By logging in, you agree to our \",\n  linkColor: \"theme\"\n};\n\nexport default withStyles(styles)(CyberSecurityBadge);\n","/Users/iub/IdeaProjects/ecoleclient/src/redux/actions/actions.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/auth/SidePanel.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/redux/actions/eleveActions.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/redux/actions/schoolActions.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/EleveTable.js",["152","153"],"import React, {useEffect, useState} from \"react\"\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Paper, Slide} from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deleteEleves, fetchEleves} from \"../../redux/actions/eleveActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst ROWS_PER_PAGE_OPTIONS = [10, 20, 100];\n\nfunction createData(eleve) {\n    console.log(eleve)\n    return [\n        eleve.id,\n        eleve.lastName,\n        eleve.firstName,\n        eleve.gender ? \"M.\" : \"F.\",\n        new Intl.DateTimeFormat(\"fr-Fr\").format(new Date(eleve.birthday))\n    ]\n}\n\nexport default function EleveTable() {\n    const columns = [\n        {\n            name: \"id\",\n            label: \"ID\"\n        },\n        {\n            name: \"lastName\",\n            label: \"NOM\"\n        },\n        {\n            name: \"firstName\",\n            label: \"PRÉNOM\"\n        },\n        {\n            name: \"gender\",\n            label: \"SEXE\"\n        },\n        {\n            name: \"birthday\",\n            label: \"DATE DE NAISSANCE\"\n        }\n    ];\n    const {content, totalElements, pageNumber} = useSelector(state => state.eleves.page);\n    const [data, setData] = useState([]);\n    const [deleteI, setDeleteI] = useState([]);\n    const [pagination, setPagination] = useState({\n        page: 0,\n        size: 10,\n        fields: \"id\",\n        direction: \"asc\"\n    });\n    const dispatch = useDispatch();\n    useEffect(() => {\n        content && setData(content.map(o => createData(o)));\n    }, [content]);\n    useEffect(() => {\n        dispatch(fetchEleves(pagination));\n    }, [pagination]);\n    const deleteHandle = (deleted) => {\n        if (deleted) {\n            dispatch(deleteEleves(pagination, {ids: deleteI.map(i => content[i].id)}));\n            setDeleteI([]);\n        } else {\n            setDeleteI([]);\n        }\n    }\n    const options = {\n        filters: false,\n        rowsPerPage: pagination.size,\n        rowsPerPageOptions: ROWS_PER_PAGE_OPTIONS,\n        serverSide: true,\n        sortOrder: {\n            name: pagination.fields,\n            direction: pagination.direction\n        },\n        count: totalElements,\n        page: pageNumber,\n        onTableChange: (action, tableState) => {\n            if (action === \"sort\")\n                setPagination({\n                    ...pagination,\n                    direction: tableState.sortOrder.direction,\n                    fields: tableState.sortOrder.name\n                });\n            if (action === \"changePage\") {\n                setPagination({...pagination, page: tableState.page});\n            }\n        },\n        onChangeRowsPerPage: rowsPerPage => {\n            setPagination({...pagination, size: rowsPerPage});\n        },\n        onRowsDelete: (data) => {\n            setDeleteI(data.data.map(o => o.dataIndex));\n        }\n    };\n    return (\n        <Paper>\n            <EleveDelete handleDone={deleteHandle} indexList={deleteI} open={deleteI.length > 0}/>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <MUIDataTable\n                        title={\"Employee List\"}\n                        data={data}\n                        columns={columns}\n                        options={options}\n                    />\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport function EleveDelete({indexList, open, handleDone}) {\n    const {content} = useSelector(state => state.eleves.page);\n    const [list, setList] = useState([]);\n    useEffect(() => {\n        setList(indexList.map(i => {\n            const eleve = content[i];\n            return eleve.id + \" \" + eleve.nom + \" \" + eleve.prenom\n        }).join(\", \") + \".\");\n    }, [indexList]);\n    return (\n        <div>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={() => handleDone(false)}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Êtes-vous sûr de vouloir supprimer ?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Êtes-vous sûr de supprimer ces enregistrements ?\n                        En supprimant définitivement, vous ne pourrez pas les récupérer.<br/>\n                        {list}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleDone(false)} color=\"primary\">\n                        Annuler\n                    </Button>\n                    <Button onClick={() => handleDone(true)} color=\"primary\">\n                        Oui, supprimer!\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/EleveAdd.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/general/Header.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/app/PageHeader.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/redux/actions/tuteurActions.js",["154"],"import axios from \"axios\";\nimport {ELEVE_BASE_URL, TUTEUR_BASE_URL} from \"../../config/apiConfig\";\nimport {ERROR_GENERATED, LOADING_STATUS_CHANGED} from \"./eleveActions\";\n\nexport const FETCH_TUTEUR_SUCCESS = \"FETCH_TUTEUR_SUCCESS\";\nexport const SAVE_TUTOR_SUCCESS = \"SAVE_TUTOR_SUCCESS\";\n\nexport function saveTutor(data) {\n    return async dispatch => {\n        function onSuccess(success) {\n            dispatch({type: SAVE_TUTOR_SUCCESS, payload: success});\n            return success;\n        }\n\n        function onError(error) {\n            dispatch({type: ERROR_GENERATED, payload: error});\n            return error;\n        }\n\n        function onFetch(loading) {\n            dispatch({type: LOADING_STATUS_CHANGED, payload: loading});\n        }\n\n        onFetch(true)\n        try {\n            const success = await axios.post(TUTEUR_BASE_URL, JSON.stringify(data), {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            onFetch(false);\n            return onSuccess(success.data);\n        } catch (error) {\n            onFetch(false);\n            return onError(error);\n        }\n    }\n}\n\nexport function fetchTuteurs(params) {\n    return async dispatch => {\n        function onSuccess(success) {\n            dispatch({type: FETCH_TUTEUR_SUCCESS, payload: success});\n            return success;\n        }\n\n        function onError(error) {\n            dispatch({type: ERROR_GENERATED, payload: error});\n            return error;\n        }\n\n        function onFetch(loading) {\n            dispatch({type: LOADING_STATUS_CHANGED, payload: loading});\n        }\n\n        onFetch(true);\n        try {\n            const success = await axios.get(TUTEUR_BASE_URL, {params: params});\n            onFetch(false);\n            return onSuccess(success.data);\n        } catch (error) {\n            onFetch(false);\n            return onError(error);\n        }\n    }\n}","/Users/iub/IdeaProjects/ecoleclient/src/components/education/years/YearTable.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/EleveAddSteps.js",["155","156","157","158","159","160","161","162"],"import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {Box, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, TextField} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchTuteurs} from \"../../redux/actions/tuteurActions\";\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {saveEleve} from \"../../redux/actions/eleveActions\";\nimport TutorSelectOptions from \"./TutorSelectOptions\";\nimport {validEmail} from \"../general/Header\";\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport {NATIONALITIES, SECTORS} from \"../../config/apiConfig\";\n\nexport const QontoConnector = withStyles({\n    alternativeLabel: {\n        top: 10,\n        left: 'calc(-50% + 16px)',\n        right: 'calc(50% + 16px)',\n    },\n    active: {\n        '& $line': {\n            borderColor: '#784af4',\n        },\n    },\n    completed: {\n        '& $line': {\n            borderColor: '#784af4',\n        },\n    },\n    line: {\n        borderColor: '#eaeaf0',\n        borderTopWidth: 3,\n        borderRadius: 1,\n    },\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n    root: {\n        color: '#eaeaf0',\n        display: 'flex',\n        height: 22,\n        alignItems: 'center',\n    },\n    active: {\n        color: '#784af4',\n    },\n    circle: {\n        width: 8,\n        height: 8,\n        borderRadius: '50%',\n        backgroundColor: 'currentColor',\n    },\n    completed: {\n        color: '#784af4',\n        zIndex: 1,\n        fontSize: 18,\n    },\n});\n\nexport function QontoStepIcon(props) {\n    const classes = useQontoStepIconStyles();\n    const {active, completed} = props;\n\n    return (\n        <div\n            className={clsx(classes.root, {\n                [classes.active]: active,\n            })}\n        >\n            {completed ? <Check className={classes.completed}/> : <div className={classes.circle}/>}\n        </div>\n    );\n}\n\nQontoStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     */\n    active: PropTypes.bool,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     */\n    completed: PropTypes.bool,\n};\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 22,\n    },\n    active: {\n        '& $line': {\n            backgroundImage:\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n        },\n    },\n    completed: {\n        '& $line': {\n            backgroundImage:\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n        },\n    },\n    line: {\n        height: 3,\n        border: 0,\n        backgroundColor: '#eaeaf0',\n        borderRadius: 1,\n    },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    active: {\n        backgroundImage:\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    },\n    completed: {\n        backgroundImage:\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    },\n});\n\nexport function ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n    const {active, completed} = props;\n\n    const icons = {\n        1: <SettingsIcon/>,\n        2: <GroupAddIcon/>,\n        3: <VideoLabelIcon/>,\n    };\n\n    return (\n        <div\n            className={clsx(classes.root, {\n                [classes.active]: active,\n                [classes.completed]: completed,\n            })}\n        >\n            {icons[String(props.icon)]}\n        </div>\n    );\n}\n\nColorlibStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     */\n    active: PropTypes.bool,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     */\n    completed: PropTypes.bool,\n    /**\n     * The label displayed in the step icon.\n     */\n    icon: PropTypes.node,\n};\n\nconst useStyles = makeStyles((theme) => ({\n\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nfunction getSteps() {\n    return ['tuteur', 'élève', 'Sauvgarder'];\n}\n\nfunction StudentForm({state, setState}) {\n    const handleChange = (e) => {\n        setState({...state, [e.target.name]: e.target.value})\n    }\n\n    // birthPlace;\n    return (<Box>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container spacing={3}>\n                <Grid item xs={4}>\n                    <TextField\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"lastName\"}\n                        id={'lastName'}\n                        value={state[\"lastName\"]}\n                        label=\"Nom\"\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        onChange={handleChange}\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"firstName\"}\n                        id={'firstName'}\n                        value={state[\"firstName\"]}\n                        label=\"Prenom\"\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <FormControl component=\"fieldset\" fullWidth variant={\"outlined\"}>\n                        <FormLabel component=\"legend\">Sexe</FormLabel>\n                        <RadioGroup\n                            row\n                            aria-label=\"gender\"\n                            name=\"gender\"\n                            value={state && state.gender === \"true\" ? \"true\" : \"false\"}\n                            onChange={(value) => {\n                                setState({\n                                        ...state,\n                                        gender: value.target.value\n                                    }\n                                )\n                            }}>\n                            <FormControlLabel value={\"false\"} control={<Radio/>} label=\"Female\"/>\n                            <FormControlLabel value={\"true\"} control={<Radio/>} label=\"Male\"/>\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={4}>\n                    <KeyboardDatePicker\n                        margin={\"dense\"}\n                        label=\"Date de naissance\"\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        value={state['birthday']}\n                        onChange={(date) => {\n                            setState({\n                                ...state,\n                                ['birthday']: date\n                            });\n                        }}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        fullWidth\n                        inputVariant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <Autocomplete\n                        value={NATIONALITIES.filter(o => o.id === state['nationality'])[0]}\n                        options={NATIONALITIES}\n                        getOptionLabel={(option) => option.label}\n                        fullWidth\n                        onChange={(event, newValue) => {\n                            setState({...state, ['nationality']: newValue.id});\n                        }}\n                        renderInput={(params) =>\n                            <TextField {...params} label=\"Nationalite\"\n                                       variant=\"outlined\" margin={\"dense\"}/>}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        onChange={handleChange}\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"birthPlace\"}\n                        id={\"birthPlace\"}\n                        value={state.birthPlace}\n                        label=\"Lieu de naissance\"\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n\n                        onChange={handleChange}\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"health\"}\n                        id={\"health\"}\n                        value={state.health}\n                        label=\"Health\"\n                        multiline\n                        rows={2}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n            </Grid>\n        </MuiPickersUtilsProvider>\n    </Box>)\n}\n\nexport default function EleveAddSteps({setOpen}) {\n    const [state, setState] = useState({});\n    console.log(state);\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n    const steps = getSteps();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchTuteurs({}));\n    }, []);\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n    const handleReset = () => {\n        setActiveStep(0);\n        setState({});\n    };\n\n    function handleSave() {\n        dispatch(saveEleve(state))\n        handleNext();\n    }\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12} hidden={activeStep !== 0}>\n                <TutorSelectOptions\n                    onChange={(value) => setState(\n                        {\n                            ...state,\n                            tutor: value\n                        })\n                    }/>\n            </Grid>\n            <Grid item xs={12} hidden={activeStep !== 1}>\n                <StudentForm setState={setState} state={state}/>\n            </Grid>\n            <Grid item xs={12} hidden={activeStep !== 2}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <h4>Voulez-vous inscrire cet étudiant :</h4>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector/>}>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={3} justify={\"flex-end\"}>\n\n                    <Grid item>\n                        <Button\n                            onClick={() => {\n                                handleReset()\n                                setOpen(false);\n                            }}\n                            className={classes.button}\n                            variant={\"outlined\"}>\n                            Annuler\n                        </Button>\n                    </Grid>\n                    {activeStep === steps.length ? (\n                        <Grid item>\n                            <Button onClick={handleReset} className={classes.button} variant={\"contained\"}>\n                                Nouveau\n                            </Button>\n                        </Grid>\n                    ) : (\n                        <Grid item>\n                            <Button disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                    variant={\"outlined\"}>\n                                Retour\n                            </Button>\n                        </Grid>\n                    )}\n                    {activeStep === steps.length - 1 ? (\n                        <Grid item>\n                            <Button\n                                disabled={!(state.tutor && state.tutor.id)}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleSave}\n                                className={classes.button}\n                            >\n                                Sauvgarder\n                            </Button>\n                        </Grid>) : activeStep < steps.length - 1 ? (\n                        <Grid item>\n                            <Button\n                                disabled={!(state.tutor && state.tutor.id)}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleNext}\n                                className={classes.button}\n                            >\n                                Suivant\n                            </Button>\n                        </Grid>) : null}\n\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","/Users/iub/IdeaProjects/ecoleclient/src/components/app/DataTable.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/config/apiConfig.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/app/DeleteDialog.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/pages/eleve/Tutor.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/TutorUpdate.js",["163","164","165"],"import {Box, FormControl, Paper, TextField} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport React, {useEffect, useState} from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch} from \"react-redux\";\nimport {QontoConnector, QontoStepIcon} from \"./EleveAddSteps\";\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {NATIONALITIES, SECTORS} from \"../../config/apiConfig\";\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport {validEmail} from \"../general/Header\";\nimport {saveTutor} from \"../../redux/actions/tuteurActions\";\n\nconst steps = ['Pere', 'Mere', 'Tuteur', 'Terminer'];\n\nexport default function TutorUpdate({handleFinish}) {\n    const [state, setState] = useState({});\n    useEffect(() => {\n        console.log(state);\n    }, [state])\n    const [activeStep, setActiveStep] = useState(0);\n    const dispatch = useDispatch();\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n    const handleReset = () => {\n        setActiveStep(0);\n        setState({});\n    };\n    function handleSave() {\n        dispatch(saveTutor(state))\n        handleNext();\n    }\n    return (<Paper>\n        <Box minHeight={500}>\n            <Grid container spacing={2} justify={\"center\"}>\n                <Grid item xs={10} hidden={activeStep !== 0}>\n                    <ParentForm state={state} setState={setState} prefix={\"Father\"}/>\n                </Grid>\n                <Grid item xs={10} hidden={activeStep !== 1}>\n                    <ParentForm state={state} setState={setState} prefix={\"Mother\"}/>\n                </Grid>\n                <Grid item xs={10} hidden={activeStep !== 2}>\n                    <TutorForm state={state} setState={setState}/>\n                </Grid>\n            </Grid>\n        </Box>\n        <Grid container spacing={2} justify={\"center\"}>\n            <Grid item xs={10}>\n                <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector/>}>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n            </Grid>\n            <Grid item xs={10}>\n                <Grid container spacing={3} justify={\"flex-end\"}>\n\n                    <Grid item>\n                        <Button\n                            onClick={() => {\n                                handleReset()\n                                handleFinish && handleFinish();\n                            }}\n                            variant={\"outlined\"}>\n                            Annuler\n                        </Button>\n                    </Grid>\n                    {activeStep === steps.length ? (\n                        <Grid item>\n                            <Button onClick={handleReset} variant={\"contained\"}>\n                                Nouveau\n                            </Button>\n                        </Grid>\n                    ) : (\n                        <Grid item>\n                            <Button disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    variant={\"outlined\"}>\n                                Retour\n                            </Button>\n                        </Grid>\n                    )}\n                    {activeStep === steps.length - 1 ? (\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleSave}\n                            >\n                                Sauvgarder\n                            </Button>\n                        </Grid>) : activeStep < steps.length - 1 ? (\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleNext}\n                            >\n                                Suivant\n                            </Button>\n                        </Grid>) : null}\n\n                </Grid>\n            </Grid>\n        </Grid>\n    </Paper>);\n}\n\nfunction TutorForm({state, setState}) {\n    const handleChange = (e) => {\n        setState({...state, [e.target.name]: e.target.value})\n    }\n    return (\n        <Box>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid container spacing={3}>\n                    <Grid item xs={4}>\n                        <TextField\n                            margin={\"dense\"}\n                            fullWidth\n                            name={\"lastNameTutor\"}\n                            id={'lastNameTutor'}\n                            value={state[\"lastNameTutor\"]}\n                            label=\"Nom\"\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField\n                            onChange={handleChange}\n                            margin={\"dense\"}\n                            fullWidth\n                            name={\"firstNameTutor\"}\n                            id={'firstNameTutor'}\n                            value={state[\"firstNameTutor\"]}\n                            label=\"Prenom\"\n                            variant=\"outlined\"\n                        />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField\n                            onChange={handleChange}\n                            margin={\"dense\"}\n                            fullWidth\n                            name={\"cinTutor\"}\n                            id={\"cinTutor\"}\n                            value={state[\"cinTutor\"]}\n                            label=\"CIN\"\n                            variant=\"outlined\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n\n                            onChange={handleChange}\n                            margin={\"dense\"}\n                            fullWidth\n                            name={\"addressTutor\"}\n                            id={\"addressTutor\"}\n                            value={state[\"addressTutor\"]}\n                            label=\"Adresse\"\n                            multiline\n                            rows={2}\n                            variant=\"outlined\"\n                        />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextField\n                            fullWidth\n                            label={\"Email\"}\n                            id={'mailTutor'}\n                            name={'mailTutor'}\n                            variant={\"outlined\"}\n                            error={!(!state['mailTutor'] || validEmail(state['mailTutor']))}\n                            value={state['mailTutor']}\n                            onChange={handleChange}\n                            margin=\"dense\"\n                            required\n                            inputProps={{maxLength: 256}}\n                        />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <FormControl fullWidth>\n                            <MuiPhoneNumber\n                                margin={\"dense\"}\n                                label={\"tel fixe\"}\n                                autoformat={true}\n                                variant={\"outlined\"}\n                                defaultCountry={'ma'}\n                                value={state['telFixeTutor']}\n                                onChange={value => {\n                                    setState({...state, ['telFixeTutor']: value});\n                                }}/>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <FormControl fullWidth>\n                            <MuiPhoneNumber\n                                margin={\"dense\"}\n                                label={\"tel mobile\"}\n                                autoformat={true}\n                                variant={\"outlined\"}\n                                defaultCountry={'ma'}\n                                value={state['telMobileTutor']}\n                                onChange={value => {\n                                    setState({...state, ['telMobileTutor']: value});\n                                }}/>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </MuiPickersUtilsProvider>\n        </Box>\n    )\n}\n\nfunction ParentForm({state, setState, prefix}) {\n    const handleChange = (e) => {\n        setState({...state, [e.target.name]: e.target.value})\n    }\n    return (<Box>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container spacing={3}>\n                <Grid item xs={4}>\n                    <TextField\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"lastName\" + prefix}\n                        id={'lastName' + prefix}\n                        value={state[\"lastName\" + prefix]}\n                        label=\"Nom\"\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        onChange={handleChange}\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"firstName\" + prefix}\n                        id={'firstName' + prefix}\n                        value={state[\"firstName\" + prefix]}\n                        label=\"Prenom\"\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        onChange={handleChange}\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"cin\" + prefix}\n                        id={\"cin\" + prefix}\n                        value={state[\"cin\" + prefix]}\n                        label=\"CIN\"\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <KeyboardDatePicker\n                        margin={\"dense\"}\n                        label=\"Date de naissance\"\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        value={state['birthday' + prefix]}\n                        onChange={(date) => {\n                            setState({\n                                ...state,\n                                ['birthday' + prefix]: date\n                            });\n                        }}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        fullWidth\n                        inputVariant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <Autocomplete\n                        value={NATIONALITIES.filter(o => o.id === state['nationality' + prefix])[0]}\n                        options={NATIONALITIES}\n                        getOptionLabel={(option) => option.label}\n                        fullWidth\n                        onChange={(event, newValue) => {\n                            setState({...state, ['nationality' + prefix]: newValue.id});\n                        }}\n                        renderInput={(params) =>\n                            <TextField {...params} label=\"Nationalite\"\n                                       variant=\"outlined\" margin={\"dense\"}/>}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n\n                        onChange={handleChange}\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"address\" + prefix}\n                        id={\"address\" + prefix}\n                        value={state[\"address\" + prefix]}\n                        label=\"Adresse\"\n                        multiline\n                        rows={2}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <Autocomplete\n                        value={state[\"sector\" + prefix]}\n                        options={SECTORS}\n                        getOptionLabel={(option) => option}\n                        fullWidth\n                        onChange={(event, newValue) => {\n                            setState({...state, [\"sector\" + prefix]: newValue});\n                        }}\n                        renderInput={(params) =>\n                            <TextField {...params} label=\"Secteur\"\n                                       margin={\"dense\"}\n                                       variant=\"outlined\"/>}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        onChange={handleChange}\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"job\" + prefix}\n                        id={'job' + prefix}\n                        value={state[\"job\" + prefix]}\n                        label=\"Profession\"\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        fullWidth\n                        label={\"Email\"}\n                        id={'mail' + prefix}\n                        name={'mail' + prefix}\n                        variant={\"outlined\"}\n                        error={\n                            !(!state['mail' + prefix] || validEmail(state['mail' + prefix]))\n                        }\n                        value={state['mail' + prefix]}\n                        onChange={handleChange}\n                        margin=\"dense\"\n                        required\n                        inputProps={{maxLength: 256}}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        onChange={handleChange}\n                        margin={\"dense\"}\n                        fullWidth\n                        name={\"addressProfessional\" + prefix}\n                        id={\"addressProfessional\" + prefix}\n                        value={state[\"addressProfessional\" + prefix]}\n                        label=\"Adresse professionelle\"\n                        multiline\n                        rows={2}\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <FormControl fullWidth>\n                        <MuiPhoneNumber\n                            onChange={handleChange}\n                            margin={\"dense\"}\n                            label={\"tel professionel\"}\n                            autoformat={true}\n                            variant={\"outlined\"}\n                            defaultCountry={'ma'}\n                            value={state['telProfessional' + prefix]}\n                            onChange={value => {\n                                setState({...state, ['telProfessional' + prefix]: value});\n                            }}/>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={4}>\n                    <FormControl fullWidth>\n                        <MuiPhoneNumber\n                            margin={\"dense\"}\n                            label={\"tel fixe\"}\n                            autoformat={true}\n                            variant={\"outlined\"}\n                            defaultCountry={'ma'}\n                            value={state['telFixe' + prefix]}\n                            onChange={value => {\n                                setState({...state, ['telFixe' + prefix]: value});\n                            }}/>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={4}>\n                    <FormControl fullWidth>\n                        <MuiPhoneNumber\n                            margin={\"dense\"}\n                            label={\"tel mobile\"}\n                            autoformat={true}\n                            variant={\"outlined\"}\n                            defaultCountry={'ma'}\n                            value={state['telMobile' + prefix]}\n                            onChange={value => {\n                                setState({...state, ['telMobile' + prefix]: value});\n                            }}/>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </MuiPickersUtilsProvider>\n    </Box>)\n}","/Users/iub/IdeaProjects/ecoleclient/src/components/eleve/TutorSelectOptions.js",[],"/Users/iub/IdeaProjects/ecoleclient/src/pages/fincance/Inscription.js",["166","167","168"],"/Users/iub/IdeaProjects/ecoleclient/src/components/education/years/YearDialog.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":51,"column":11,"nodeType":"175","endLine":51,"endColumn":45},{"ruleId":"173","severity":1,"message":"174","line":55,"column":11,"nodeType":"175","endLine":55,"endColumn":44},{"ruleId":"176","severity":1,"message":"177","line":63,"column":8,"nodeType":"178","endLine":63,"endColumn":20,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":126,"column":8,"nodeType":"178","endLine":126,"endColumn":19,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":9,"nodeType":"184","messageId":"185","endLine":2,"endColumn":23},{"ruleId":"182","severity":1,"message":"186","line":17,"column":22,"nodeType":"184","messageId":"185","endLine":17,"endColumn":33},{"ruleId":"182","severity":1,"message":"187","line":23,"column":9,"nodeType":"184","messageId":"185","endLine":23,"endColumn":19},{"ruleId":"182","severity":1,"message":"188","line":24,"column":8,"nodeType":"184","messageId":"185","endLine":24,"endColumn":22},{"ruleId":"182","severity":1,"message":"189","line":25,"column":24,"nodeType":"184","messageId":"185","endLine":25,"endColumn":31},{"ruleId":"182","severity":1,"message":"190","line":99,"column":7,"nodeType":"184","messageId":"185","endLine":99,"endColumn":24},{"ruleId":"191","severity":1,"message":"192","line":262,"column":33,"nodeType":"193","messageId":"194","endLine":262,"endColumn":51,"fix":"195"},{"ruleId":"191","severity":1,"message":"196","line":279,"column":49,"nodeType":"193","messageId":"194","endLine":279,"endColumn":77,"fix":"197"},{"ruleId":"176","severity":1,"message":"177","line":327,"column":8,"nodeType":"178","endLine":327,"endColumn":10,"suggestions":"198"},{"ruleId":"191","severity":1,"message":"199","line":203,"column":57,"nodeType":"193","messageId":"194","endLine":203,"endColumn":80,"fix":"200"},{"ruleId":"191","severity":1,"message":"201","line":217,"column":57,"nodeType":"193","messageId":"194","endLine":217,"endColumn":82,"fix":"202"},{"ruleId":"203","severity":1,"message":"204","line":388,"column":29,"nodeType":"205","endLine":390,"endColumn":31},{"ruleId":"182","severity":1,"message":"206","line":18,"column":12,"nodeType":"184","messageId":"185","endLine":18,"endColumn":17},{"ruleId":"182","severity":1,"message":"207","line":18,"column":19,"nodeType":"184","messageId":"185","endLine":18,"endColumn":27},{"ruleId":"182","severity":1,"message":"208","line":40,"column":11,"nodeType":"184","messageId":"185","endLine":40,"endColumn":19},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'content'. Either include it or remove the dependency array.",["212"],"no-unused-vars","'ELEVE_BASE_URL' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'validEmail' is defined but never used.","'MuiPhoneNumber' is defined but never used.","'SECTORS' is defined but never used.","'ColorlibConnector' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['birthday'] found.","Property","unnecessarilyComputedProperty",{"range":"213","text":"214"},"Unnecessarily computed property ['nationality'] found.",{"range":"215","text":"216"},["217"],"Unnecessarily computed property ['telFixeTutor'] found.",{"range":"218","text":"219"},"Unnecessarily computed property ['telMobileTutor'] found.",{"range":"220","text":"221"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},[7953,7965],"'birthday'",[8705,8720],"'nationality'",{"desc":"226","fix":"227"},[8354,8370],"'telFixeTutor'",[9048,9066],"'telMobileTutor'","Update the dependencies array to be: [dispatch, pagination]",{"range":"228","text":"229"},"Update the dependencies array to be: [content, indexList]",{"range":"230","text":"231"},"Update the dependencies array to be: [dispatch]",{"range":"232","text":"233"},[1848,1860],"[dispatch, pagination]",[3955,3966],"[content, indexList]",[10389,10391],"[dispatch]"]